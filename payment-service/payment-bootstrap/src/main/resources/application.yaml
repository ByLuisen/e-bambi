server:
  port: 8183

debug:
  enabled: true

logging:
  level:
    com.e.bambi: DEBUG
    reactor.kafka: DEBUG
    io:
    #      r2dbc: DEBUG
    #      r2dbc.pool: DEBUG
    #      r2dbc.postgresql: DEBUG
    org:
#      apache.kafka: DEBUG
      springframework: DEBUG
      #      springframework.r2dbc: DEBUG
      springframework.data.r2dbc: TRACE

payment-service:
  saga.order_orchestrator.process_payment: saga.order_orchestrator.process_payment

spring:
  webflux:
    base-path: /api
  profiles:
    active: native
  application:
    name: order-service
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_PROVIDER_URI:http://localhost:8081/realms/bambi}
  r2dbc:
    url: r2dbc:postgresql://${DATASOURCE_URL_HOST:localhost}:${DATASOURCE_URL_PORT:5435}/payment-service
    username: user
    password: password
  flyway:
    url: jdbc:postgresql://${DATASOURCE_URL_HOST:localhost}:${DATASOURCE_URL_PORT:5435}/payment-service
    locations: classpath:db/migration

kafka-config:
  bootstrap-servers: localhost:19092, localhost:29092, localhost:39092
  schema-registry-url: http://localhost:18081

kafka-consumer-config:
  payment-service-consumer-group-id: payment-service-consumer
  specific-avro-reader: true
  key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
  enable-auto-commit: false
  auto-offset-reset: earliest

management:
  endpoints:
    web:
      exposure:
        include: "health,info"
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true
